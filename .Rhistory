xlab(expression(" ")) +
# geom_text(label = "C", x = 2.4, y = 4) +
theme(axis.title.x = element_text(vjust = -1, size = 10)) +
theme(axis.title.y = element_text(vjust = 3, size = 10))
smith.load.date <- ggplot(ang5, aes(x = factor(sample_time), y = ratio, group_by(group.y), shape = site)) +
geom_jitter(position = position_jitter(width=.2), colour = "grey75", size=2) +
#stat_summary(fun.data = min.mean.sd.max, geom = "boxplot", fill = "transparent") +
scale_y_continuous(name = "log(Smithora (g dwt) / Zostera (g dwt))", limits = c(0, 4), breaks = c(0,1,2,3,4), labels = c(0,1,2,3,4)) +
guides(size = FALSE) +
scale_shape_manual(guide = guide_legend(title = "Site"), values = c(1,2,22,23,8,15,16,17)) +
scale_x_discrete(labels = c("May", "June", "Aug")) +
geom_point(ang5, mapping = aes(sample_time, m4ratio$mod4pr, size = 2)) +
theme_bw() +
theme(legend.key = element_rect(fill = NA),
axis.text = element_text(size = 8)) +
facet_grid(cols = vars(group.y), labeller(., c("Edge Sites", "Interior Sites"))) +
theme(panel.grid = element_blank()) +
xlab(expression(" ")) +
# geom_text(label = "C", x = 2.4, y = 4) +
theme(axis.title.x = element_text(vjust = -1, size = 10)) +
theme(axis.title.y = element_text(vjust = 3, size = 10))
levels(ang5$group.y)[levels(ang5$group.y == "edge")] <- "Edge Sites"
levels(ang5$group.y)[levels(ang5$group.y == "inner")] <- "Interior Sites"
levels(ang5$group.y)[levels(ang5$group.y == "edge")] <- "Edge Sites"
levels(ang5$group.y)[levels(ang5$group.y == "inner")] <- "Interior Sites"
levels(ang5$site)[levels(ang5$site == "inner sandspit")] <- "IS"
levels(ang5$site)[levels(ang5$site == "outer sandspit")] <- "OS"
levels(ang5$site)[levels(ang5$site == "inner tristan")] <- "IT"
levels(ang5$site)[levels(ang5$site == "inner ang")] <- "IA"
levels(ang5$site)[levels(ang5$site == "wolf")] <- "WF"
levels(ang5$site)[levels(ang5$site == "inner derek")] <- "ID"
levels(ang5$site)[levels(ang5$site == "alcove")] <- "AL"
levels(ang5$site)[levels(ang5$site == "inner carolyn")] <- "IC"
smith.load.date <- ggplot(ang5, aes(x = factor(sample_time), y = ratio, group_by(group.y), shape = site)) +
geom_jitter(position = position_jitter(width=.2), colour = "grey75", size=2) +
#stat_summary(fun.data = min.mean.sd.max, geom = "boxplot", fill = "transparent") +
scale_y_continuous(name = "log(Smithora (g dwt) / Zostera (g dwt))", limits = c(0, 4), breaks = c(0,1,2,3,4), labels = c(0,1,2,3,4)) +
guides(size = FALSE) +
scale_shape_manual(guide = guide_legend(title = "Site"), values = c(1,2,22,23,8,15,16,17)) +
scale_x_discrete(labels = c("May", "June", "Aug")) +
geom_point(ang5, mapping = aes(sample_time, m4ratio$mod4pr, size = 2)) +
theme_bw() +
theme(legend.key = element_rect(fill = NA),
axis.text = element_text(size = 8)) +
facet_grid(cols = vars(group.y)) +
theme(panel.grid = element_blank()) +
xlab(expression(" ")) +
# geom_text(label = "C", x = 2.4, y = 4) +
theme(axis.title.x = element_text(vjust = -1, size = 10)) +
theme(axis.title.y = element_text(vjust = 3, size = 10))
smith.load.date
ggsave("Fig1C.smithload.jpg", plot = smith.load.date, width = 6, height = 3)
smith.load.date
ang5 <- ang4[,c("site", "group.y", "sample_time", "blade_sample_id", "distance_m", "macrophyte.x","final_dry_g.x", "macrophyte.y", "final_dry_g.y")]
ang5 <- ang4 %>%
select(c(site, group.y, sample_time, blade_sample_id, distance_m, macrophyte.x,final_dry_g.x, macrophyte.y, final_dry_g.y)) %>%
filter(macrophyte.y == "zostera") %>%
replace_na(list(macrophyte.x = "smithora", final_dry_g.x = "0")) %>%
mutate(ratio = as.numeric(final_dry_g.x) / final_dry_g.y)
ang5$ratio <- as.numeric(ang5$final_dry_g.x) / as.numeric(ang5$final_dry_g.y)
#ang5$date <- as.Date(ang5$date, format="%d-%b")
ang5$logratio <- log(ang5$ratio + 0.1)
levels(ang5$group.y)[levels(ang5$group.y == "edge")] <- "Edge Sites"
levels(ang5$group.y)[levels(ang5$group.y == "inner")] <- "Interior Sites"
levels(ang5$site)[levels(ang5$site == "inner sandspit")] <- "IS"
levels(ang5$site)[levels(ang5$site == "outer sandspit")] <- "OS"
levels(ang5$site)[levels(ang5$site == "inner tristan")] <- "IT"
levels(ang5$site)[levels(ang5$site == "inner ang")] <- "IA"
levels(ang5$site)[levels(ang5$site == "wolf")] <- "WF"
levels(ang5$site)[levels(ang5$site == "inner derek")] <- "ID"
levels(ang5$site)[levels(ang5$site == "alcove")] <- "AL"
levels(ang5$site)[levels(ang5$site == "inner carolyn")] <- "IC"
summary<-ddply(ang5, .(site, sample_time, group.y), summarise, min(logratio))
site.summary<-ddply(ang5, .(site, sample_time, group.y), summarise, length(distance_m))
# model selection for smithora load
ang5$site <- as.factor(ang5$site)
mod0 <- lme(I(log(ratio+0.01)) ~ group.y*sample_time, method = "ML", random = ~1|site, data = ang5)
mod1 <- lme(I(log(ratio+0.01)) ~ sample_time, method = "ML", random = ~1|site, data = ang5)
mod3 <- lme(I(log(ratio+0.01)) ~ group.y, method = "ML", random = ~1|site, data = ang5)
mod2 <- lme(I(log(ratio+0.01)) ~ 1,  method = "ML", random = ~1|site, data = ang5)
mod4 <- lme(I(log(ratio+0.01)) ~ group.y*sample_time, method = "ML", random = ~1 + sample_time|site, data = ang5)
smithora.summary <- model.sel(mod0, mod1, mod2, mod3, mod4)
mean(ang5[(ang5$site == "wolf"),]$ratio)
mean(ang5[(ang5$site == "inner ang"),]$ratio)
mod4pr <- as.data.frame(predict(mod4))
colnames(mod4pr) <- c("mod4pr")
ang5$m4ratio <- exp(mod4pr)
smith.load.date <- ggplot(ang5, aes(x = factor(sample_time), y = ratio, group_by(group.y), shape = site)) +
geom_jitter(position = position_jitter(width=.2), colour = "grey75", size=2) +
#stat_summary(fun.data = min.mean.sd.max, geom = "boxplot", fill = "transparent") +
scale_y_continuous(name = "log(Smithora (g dwt) / Zostera (g dwt))", limits = c(0, 4), breaks = c(0,1,2,3,4), labels = c(0,1,2,3,4)) +
guides(size = FALSE) +
scale_shape_manual(guide = guide_legend(title = "Site"), values = c(1,2,22,23,8,15,16,17)) +
scale_x_discrete(labels = c("May", "June", "Aug")) +
geom_point(ang5, mapping = aes(sample_time, m4ratio$mod4pr, size = 2)) +
theme_bw() +
theme(legend.key = element_rect(fill = NA),
axis.text = element_text(size = 8)) +
facet_grid(cols = vars(group.y)) +
theme(panel.grid = element_blank()) +
xlab(expression(" ")) +
# geom_text(label = "C", x = 2.4, y = 4) +
theme(axis.title.x = element_text(vjust = -1, size = 10)) +
theme(axis.title.y = element_text(vjust = 3, size = 10))
smith.load.date
ang5 <- ang4[,c("site", "group.y", "sample_time", "blade_sample_id", "distance_m", "macrophyte.x","final_dry_g.x", "macrophyte.y", "final_dry_g.y")]
ang5 <- ang4 %>%
select(c(site, group.y, sample_time, blade_sample_id, distance_m, macrophyte.x,final_dry_g.x, macrophyte.y, final_dry_g.y)) %>%
filter(macrophyte.y == "zostera") %>%
replace_na(list(macrophyte.x = "smithora", final_dry_g.x = "0")) %>%
mutate(ratio = as.numeric(final_dry_g.x) / final_dry_g.y)
ang5$ratio <- as.numeric(ang5$final_dry_g.x) / as.numeric(ang5$final_dry_g.y)
#ang5$date <- as.Date(ang5$date, format="%d-%b")
ang5$logratio <- log(ang5$ratio + 0.1)
levels(ang5$group.y)[levels(ang5$group.y == "edge")] <- "Edge Sites"
class(ang5$group.y)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(reshape2)
library(plyr)
library(stringr)
library(nlme)
library(MuMIn)
library(knitr)
library(captioner)
knitr::opts_chunk$set(echo = FALSE)
table_nums <- captioner::captioner(prefix = "Table. ") #sets prefix for all tables
table_nums(name = "Table_2", caption = "Model selection results: Survey.", display = FALSE)
fig_nums <- captioner::captioner(prefix = "Figure.")
fig_nums(name = "Fig_1C", caption = "Smithora load at Eight sites in Choked Pass", display = FALSE)
## load data
smith.bio <- read.csv("./data/Smith.csv")
compare <- read.csv("./data/choked_seagrass_smithora.csv")
ang <- read.csv("./data/macrophyte_biomass_zeros_20170709.csv") # , stringsAsFactors=F
sites <- read.csv("./data/choked_sites.csv")
smith.expt <- read.csv("./data/Transplant_raw_smithora_wt.csv")
grazertraits <- read.csv("./data/grazertraitsmaster.csv")
grazers <- read.csv("./data/Grazers_EdgeVSInterior_V1_Aug09_2017.csv")
### compare
## from meadow surveys, identify edge and inner samples
edge <- filter(compare, site == "choked_edge_wolf")
inner <- filter(compare, site == "choked_inner_wolf")
compare_edge <- bind_rows(inner,edge)
###Making data nicer for plotting
head(compare)
#View(compare)
compare_edge2 <- compare_edge
compare_edge2$site <- as.character(compare_edge2$site)
compare_edge2$site[compare_edge$site == "choked_edge_wolf"] <- "Edge"
compare_edge2$site <- as.character(compare_edge2$site)
compare_edge2$site[compare_edge$site == "choked_inner_wolf"] <- "Interior"
## function to estimate sds for boxplots
min.mean.sd.max <- function(x) {
r <- c(min(x), mean(x) - sd(x), mean(x), mean(x) + sd(x), max(x))
names(r) <- c("ymin", "lower", "middle", "upper", "ymax")
r
}
ang2 <- merge(ang, sites, by.x = "site", by.y = "name2")
## this next bit selects the sites we want, and removes a couple of rows that appeared to be duplicates, zeros, or unclearly assigned to a shoot.
ang <- ang2 %>%
filter(group != "kelp") %>%
select(-c(notes, oven_date, QAQC_date,QAQC_Initials, Lat, Long, foil_wgt_g, wet_wgt_g, dry_wgt_g)) %>%
mutate(uniqueID = paste(date, site, blade_sample_id, sep = ".")) %>%
filter(final_dry_g != "0") %>%
filter(final_dry_g > "0") %>%
filter(uniqueID != "29-May.inner sandspit.75") %>%
mutate(uniqueID2 = paste(uniqueID, final_dry_g, sep = ".")) %>%
filter(uniqueID2 != "29-May.alcove.38.0.1") %>%
select(-uniqueID2)
ang.smith <- subset(ang, ang$macrophyte %in% "smithora")
ang.zostera<- subset(ang, ang$macrophyte %in% "zostera")
ang4 <- merge(ang.smith, ang.zostera, by = c("blade_sample_id", "year","sample_time", "site", "distance_m"), all = TRUE)
ang5 <- ang4[,c("site", "group.y", "sample_time", "blade_sample_id", "distance_m", "macrophyte.x","final_dry_g.x", "macrophyte.y", "final_dry_g.y")]
ang5 <- ang4 %>%
select(c(site, group.y, sample_time, blade_sample_id, distance_m, macrophyte.x,final_dry_g.x, macrophyte.y, final_dry_g.y)) %>%
filter(macrophyte.y == "zostera") %>%
replace_na(list(macrophyte.x = "smithora", final_dry_g.x = "0")) %>%
mutate(ratio = as.numeric(final_dry_g.x) / final_dry_g.y)
ang5$ratio <- as.numeric(ang5$final_dry_g.x) / as.numeric(ang5$final_dry_g.y)
#ang5$date <- as.Date(ang5$date, format="%d-%b")
ang5$logratio <- log(ang5$ratio + 0.1)
class(ang5$group.y)
levels(ang5$group.y)[levels(ang5$group.y == "edge")] <- "Edge Sites"
levels(ang5$group.y)[levels(ang5$group.y == "inner")] <- "Interior Sites"
levels(ang5$site)[levels(ang5$site == "inner sandspit")] <- "IS"
levels(ang5$site)[levels(ang5$site == "outer sandspit")] <- "OS"
levels(ang5$site)[levels(ang5$site == "inner tristan")] <- "IT"
levels(ang5$site)[levels(ang5$site == "inner ang")] <- "IA"
levels(ang5$site)[levels(ang5$site == "wolf")] <- "WF"
levels(ang5$site)[levels(ang5$site == "inner derek")] <- "ID"
levels(ang5$site)[levels(ang5$site == "alcove")] <- "AL"
levels(ang5$site)[levels(ang5$site == "inner carolyn")] <- "IC"
summary<-ddply(ang5, .(site, sample_time, group.y), summarise, min(logratio))
site.summary<-ddply(ang5, .(site, sample_time, group.y), summarise, length(distance_m))
#hist(log(ang5$ratio))
View(ang5)
levels(ang5$group.y)
levels(ang5$group.y)[levels(ang5$group.y=="edge")] <- "Edge Sites"
levels(ang5$group.y)
class(ang5.group.y)
class(ang5$group.y)
revalue(ang5$group.y, c("edge"="Edge Sites", "inner"="Interior Sites"))
View(ang5)
ang5 <- ang5 %>%
revalue(ang5$group.y, c("edge"="Edge Sites", "inner"="Interior Sites"))
ang5 <- ang5 %>%
revalue(ang5$group.y, c("edge"="Edge Sites", "inner"="Interior Sites"))
class(ang5$group.y)
ang5 <- ang5 %>%
revalue(group.y, c("edge"="Edge Sites", "inner"="Interior Sites"))
ang5 <- ang5 %>%
levels(group.y)[levels(group.y=="edge")] <- "Edge Sites"
ang5 <- ang5 %>%
revalue(., group.y, c("edge"="Edge Sites", "inner"="Interior Sites"))
levels(ang5$group.y)
ang5 <- ang5 %>%
revalue(., factor(group.y), c("edge"="Edge Sites", "inner"="Interior Sites"))
ang5 <- ang5 %>%
revalue(., factor(group.y), c(edge = "Edge Sites", inner ="Interior Sites"))
revalue(ang5, factor(group.y), c(edge = "Edge Sites", inner ="Interior Sites"))
ang5 <- ang5 %>%
revalue(ang5$group.y, c(edge = "Edge Sites", inner ="Interior Sites"))
revalue(ang5$group.y, c(edge = "Edge Sites", inner ="Interior Sites"))
ang5 <- ang5 %>%
s <-  revalue(ang5$group.y, c(edge = "Edge Sites", inner ="Interior Sites"))
ang5 <- ang5 %>%
s <-revalue(ang5$group.y, c(edge = "Edge Sites", inner ="Interior Sites"))
s <-revalue(ang5$group.y, c(edge = "Edge Sites", inner ="Interior Sites"))
s
ang5$site <- revalue(ang5$group.y, c(edge = "Edge Sites", inner ="Interior Sites"))
ang5$group.y <- revalue(ang5$group.y, c(edge = "Edge Sites", inner ="Interior Sites"))
ang5 <- ang4[,c("site", "group.y", "sample_time", "blade_sample_id", "distance_m", "macrophyte.x","final_dry_g.x", "macrophyte.y", "final_dry_g.y")]
ang5 <- ang4 %>%
select(c(site, group.y, sample_time, blade_sample_id, distance_m, macrophyte.x,final_dry_g.x, macrophyte.y, final_dry_g.y)) %>%
filter(macrophyte.y == "zostera") %>%
replace_na(list(macrophyte.x = "smithora", final_dry_g.x = "0")) %>%
mutate(ratio = as.numeric(final_dry_g.x) / final_dry_g.y)
ang5$ratio <- as.numeric(ang5$final_dry_g.x) / as.numeric(ang5$final_dry_g.y)
#ang5$date <- as.Date(ang5$date, format="%d-%b")
ang5$logratio <- log(ang5$ratio + 0.1)
ang5$group.y <- revalue(ang5$group.y, c(edge = "Edge Sites", inner ="Interior Sites"))
ang5$site <- revalue(ang5$site, c("inner sandspit" = "IS", "outer sandspit" = "OS","inner tristan" = "IT", "inner ang" = "IA", "wolf" = "WF", "inner derek" = "ID", "alcove" = "AL", "inner carolyn" = "IC"))
summary<-ddply(ang5, .(site, sample_time, group.y), summarise, min(logratio))
site.summary<-ddply(ang5, .(site, sample_time, group.y), summarise, length(distance_m))
smith.load <- ggplot(ang5, aes(x = group.y, y = ratio)) +
geom_jitter(position = position_jitter(width=.2), size=3, colour = "gray60") +
stat_summary(fun.data = min.mean.sd.max, geom = "boxplot", fill = "transparent") +
scale_y_continuous(name = "Smithora (g dwt) / Zostera (g dwt)", limits = c(-0.15, 4), breaks = c(0,1,2,3,4), labels = c(0,1,2,3,4)) +
theme_bw() +
theme(panel.grid = element_blank()) +
xlab(expression("Location")) +
geom_text(label = "C", x = 2.4, y = 4) +
geom_text(label = "C", x = 2.4, y = 4) +
theme(axis.title.x = element_text(vjust = -1, size = 12)) +
theme(axis.title.y = element_text(vjust = -1, size = 12))
smith.load
ang5$site <- as.factor(ang5$site)
mod0 <- lme(I(log(ratio+0.01)) ~ group.y*sample_time, method = "ML", random = ~1|site, data = ang5)
mod1 <- lme(I(log(ratio+0.01)) ~ sample_time, method = "ML", random = ~1|site, data = ang5)
mod3 <- lme(I(log(ratio+0.01)) ~ group.y, method = "ML", random = ~1|site, data = ang5)
mod2 <- lme(I(log(ratio+0.01)) ~ 1,  method = "ML", random = ~1|site, data = ang5)
mod4 <- lme(I(log(ratio+0.01)) ~ group.y*sample_time, method = "ML", random = ~1 + sample_time|site, data = ang5)
smithora.summary <- model.sel(mod0, mod1, mod2, mod3, mod4)
mean(ang5[(ang5$site == "wolf"),]$ratio)
mean(ang5[(ang5$site == "inner ang"),]$ratio)
mod4pr <- as.data.frame(predict(mod4))
colnames(mod4pr) <- c("mod4pr")
ang5$m4ratio <- exp(mod4pr)
smithora.summary
smith.load.date <- ggplot(ang5, aes(x = factor(sample_time), y = ratio, group_by(group.y), shape = site)) +
geom_jitter(position = position_jitter(width=.2), colour = "grey75", size=2) +
#stat_summary(fun.data = min.mean.sd.max, geom = "boxplot", fill = "transparent") +
scale_y_continuous(name = "log(Smithora (g dwt) / Zostera (g dwt))", limits = c(0, 4), breaks = c(0,1,2,3,4), labels = c(0,1,2,3,4)) +
guides(size = FALSE) +
scale_shape_manual(guide = guide_legend(title = "Site"), values = c(1,2,22,23,8,15,16,17)) +
scale_x_discrete(labels = c("May", "June", "Aug")) +
geom_point(ang5, mapping = aes(sample_time, m4ratio$mod4pr, size = 2)) +
theme_bw() +
theme(legend.key = element_rect(fill = NA),
axis.text = element_text(size = 8)) +
facet_grid(cols = vars(group.y)) +
theme(panel.grid = element_blank()) +
xlab(expression(" ")) +
# geom_text(label = "C", x = 2.4, y = 4) +
theme(axis.title.x = element_text(vjust = -1, size = 10)) +
theme(axis.title.y = element_text(vjust = 3, size = 10))
smith.load.date
ggsave("Fig1C.smithload.jpg", plot = smith.load.date, width = 6, height = 3)
# model selection for smithora load
shapiro.test(ang5$ratio)
# model selection for smithora load
shapiro.test(ang5$logratio)
# model selection for smithora load
shapiro.test(ang5$logratio+0.01)
hist(ang5$logratio+0.01)
hist(ang5$logratio)
hist(ang5$ratio)
plot((ang5$logratio))
install.packages("pscl")
library(boot, lib.loc = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(tidyverse)
library(ggplot2)
library(dplyr)
library(reshape2)
library(plyr)
library(stringr)
library(nlme)
library(MuMIn)
library(knitr)
library(captioner)
library(pscl)
library(boot)
knitr::opts_chunk$set(echo = FALSE)
hist(ang5$ratio, breaks = 40)
hist(ang5$ratio, breaks = 80)
mean(ang5$ratio)
sd(ang5$ratio)
m1 <- zeroinfl(ratio ~ site*sample_time | group.y)
m1 <- zeroinfl(ratio ~ site*sample_time | group.y, data = ang5)
class(ang5$ratio)
install.packages("gamlss")
library(tidyverse)
library(ggplot2)
library(dplyr)
library(reshape2)
library(plyr)
library(stringr)
library(nlme)
library(MuMIn)
library(knitr)
library(captioner)
library(gamlss)
knitr::opts_chunk$set(echo = FALSE)
#zero inflated beta regression model
m1 <- gamlss(formula = ratio ~ group.y, data = ang5)
ang5[ang5$ratio == "NA",]
ang5[ang5$group.y == "NA",]
m1 <- gamlss(formula = ratio ~ group.y, data = na.omit(ang5))
summary(m1)
#zero inflated beta regression model
m1 <- gamlss(formula = ratio ~ 1 + group.y, data = ang5)
#zero inflated beta regression model
m1 <- gamlss(formula = ratio ~ 1 + group.y, data = na.omit(ang5))
summary(m1)
hist(ang5$ratio, breaks = 80)
head(ang)
detach(nlme)
detach('package:nlme', unload = TRUE)
detach("package:gamlss", unload = TRUE)
detach("package:gamlss.data", unload = TRUE)
detach("package:gamlss.dist", unload = TRUE)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(reshape2)
library(plyr)
library(stringr)
library(nlme)
library(MuMIn)
library(knitr)
library(captioner)
knitr::opts_chunk$set(echo = FALSE)
detach('package:nlme', unload = TRUE)
library(lme4)
mod0 <- glmer(ratio ~ group.y*sample_time + (1|site), family = poisson, REML = FALSE, data = ang5)
summary(mod0)
plot(ang5$ratio)
hist(ang5$ratio, breaks = 80)
hist(ang5$ratio, breaks = 80)
ang5$non_zero <- ifelse(ang5$raio > 0, 1, 0)
ang5 <- ang4 %>%
select(c(site, group.y, sample_time, blade_sample_id, distance_m, macrophyte.x,final_dry_g.x, macrophyte.y, final_dry_g.y)) %>%
filter(macrophyte.y == "zostera") %>%
replace_na(list(macrophyte.x = "smithora", final_dry_g.x = "0")) %>%
mutate(ratio = as.numeric(final_dry_g.x) / final_dry_g.y)
ang4 <- merge(ang.smith, ang.zostera, by = c("blade_sample_id", "year","sample_time", "site", "distance_m"), all = TRUE)
ang5 <- ang4[,c("site", "group.y", "sample_time", "blade_sample_id", "distance_m", "macrophyte.x","final_dry_g.x", "macrophyte.y", "final_dry_g.y")]
ang5 <- ang4 %>%
select(c(site, group.y, sample_time, blade_sample_id, distance_m, macrophyte.x,final_dry_g.x, macrophyte.y, final_dry_g.y)) %>%
filter(macrophyte.y == "zostera") %>%
replace_na(list(macrophyte.x = "smithora", final_dry_g.x = "0")) %>%
mutate(ratio = as.numeric(final_dry_g.x) / final_dry_g.y)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(reshape2)
library(plyr)
library(stringr)
#library(nlme)
library(MuMIn)
library(knitr)
library(captioner)
knitr::opts_chunk$set(echo = FALSE)
ang5 <- ang4[,c("site", "group.y", "sample_time", "blade_sample_id", "distance_m", "macrophyte.x","final_dry_g.x", "macrophyte.y", "final_dry_g.y")]
ang5 <- ang4 %>%
select(c(site, group.y, sample_time, blade_sample_id, distance_m, macrophyte.x,final_dry_g.x, macrophyte.y, final_dry_g.y)) %>%
filter(macrophyte.y == "zostera") %>%
replace_na(list(macrophyte.x = "smithora", final_dry_g.x = "0")) %>%
mutate(ratio = as.numeric(final_dry_g.x) / final_dry_g.y)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(reshape2)
library(plyr)
library(stringr)
#library(nlme)
library(MuMIn)
library(knitr)
library(captioner)
knitr::opts_chunk$set(echo = FALSE)
## load data
smith.bio <- read.csv("./data/Smith.csv")
compare <- read.csv("./data/choked_seagrass_smithora.csv")
ang <- read.csv("./data/macrophyte_biomass_zeros_20170709.csv") # , stringsAsFactors=F
sites <- read.csv("./data/choked_sites.csv")
smith.expt <- read.csv("./data/Transplant_raw_smithora_wt.csv")
grazertraits <- read.csv("./data/grazertraitsmaster.csv")
grazers <- read.csv("./data/Grazers_EdgeVSInterior_V1_Aug09_2017.csv")
### compare
## from meadow surveys, identify edge and inner samples
edge <- filter(compare, site == "choked_edge_wolf")
inner <- filter(compare, site == "choked_inner_wolf")
compare_edge <- bind_rows(inner,edge)
###Making data nicer for plotting
head(compare)
#View(compare)
compare_edge2 <- compare_edge
compare_edge2$site <- as.character(compare_edge2$site)
compare_edge2$site[compare_edge$site == "choked_edge_wolf"] <- "Edge"
compare_edge2$site <- as.character(compare_edge2$site)
compare_edge2$site[compare_edge$site == "choked_inner_wolf"] <- "Interior"
## function to estimate sds for boxplots
min.mean.sd.max <- function(x) {
r <- c(min(x), mean(x) - sd(x), mean(x), mean(x) + sd(x), max(x))
names(r) <- c("ymin", "lower", "middle", "upper", "ymax")
r
}
ang2 <- merge(ang, sites, by.x = "site", by.y = "name2")
## this next bit selects the sites we want, and removes a couple of rows that appeared to be duplicates, zeros, or unclearly assigned to a shoot.
ang <- ang2 %>%
filter(group != "kelp") %>%
select(-c(notes, oven_date, QAQC_date,QAQC_Initials, Lat, Long, foil_wgt_g, wet_wgt_g, dry_wgt_g)) %>%
mutate(uniqueID = paste(date, site, blade_sample_id, sep = ".")) %>%
filter(final_dry_g != "0") %>%
filter(final_dry_g > "0") %>%
filter(uniqueID != "29-May.inner sandspit.75") %>%
mutate(uniqueID2 = paste(uniqueID, final_dry_g, sep = ".")) %>%
filter(uniqueID2 != "29-May.alcove.38.0.1") %>%
select(-uniqueID2)
install.packages(c("classInt", "cowplot", "e1071", "RgoogleMaps", "sf", "units"))
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
