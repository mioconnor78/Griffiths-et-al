# model selection for smithora load
shapiro.test(ang5$ratio)
# model selection for smithora load
shapiro.test(ang5$logratio)
# model selection for smithora load
shapiro.test(ang5$logratio+0.01)
hist(ang5$logratio+0.01)
hist(ang5$logratio)
hist(ang5$ratio)
plot((ang5$logratio))
install.packages("pscl")
library(boot, lib.loc = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(tidyverse)
library(ggplot2)
library(dplyr)
library(reshape2)
library(plyr)
library(stringr)
library(nlme)
library(MuMIn)
library(knitr)
library(captioner)
library(pscl)
library(boot)
knitr::opts_chunk$set(echo = FALSE)
hist(ang5$ratio, breaks = 40)
hist(ang5$ratio, breaks = 80)
mean(ang5$ratio)
sd(ang5$ratio)
m1 <- zeroinfl(ratio ~ site*sample_time | group.y)
m1 <- zeroinfl(ratio ~ site*sample_time | group.y, data = ang5)
class(ang5$ratio)
install.packages("gamlss")
library(tidyverse)
library(ggplot2)
library(dplyr)
library(reshape2)
library(plyr)
library(stringr)
library(nlme)
library(MuMIn)
library(knitr)
library(captioner)
library(gamlss)
knitr::opts_chunk$set(echo = FALSE)
#zero inflated beta regression model
m1 <- gamlss(formula = ratio ~ group.y, data = ang5)
ang5[ang5$ratio == "NA",]
ang5[ang5$group.y == "NA",]
m1 <- gamlss(formula = ratio ~ group.y, data = na.omit(ang5))
summary(m1)
#zero inflated beta regression model
m1 <- gamlss(formula = ratio ~ 1 + group.y, data = ang5)
#zero inflated beta regression model
m1 <- gamlss(formula = ratio ~ 1 + group.y, data = na.omit(ang5))
summary(m1)
hist(ang5$ratio, breaks = 80)
head(ang)
detach(nlme)
detach('package:nlme', unload = TRUE)
detach("package:gamlss", unload = TRUE)
detach("package:gamlss.data", unload = TRUE)
detach("package:gamlss.dist", unload = TRUE)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(reshape2)
library(plyr)
library(stringr)
library(nlme)
library(MuMIn)
library(knitr)
library(captioner)
knitr::opts_chunk$set(echo = FALSE)
detach('package:nlme', unload = TRUE)
library(lme4)
mod0 <- glmer(ratio ~ group.y*sample_time + (1|site), family = poisson, REML = FALSE, data = ang5)
summary(mod0)
plot(ang5$ratio)
hist(ang5$ratio, breaks = 80)
hist(ang5$ratio, breaks = 80)
ang5$non_zero <- ifelse(ang5$raio > 0, 1, 0)
ang5 <- ang4 %>%
select(c(site, group.y, sample_time, blade_sample_id, distance_m, macrophyte.x,final_dry_g.x, macrophyte.y, final_dry_g.y)) %>%
filter(macrophyte.y == "zostera") %>%
replace_na(list(macrophyte.x = "smithora", final_dry_g.x = "0")) %>%
mutate(ratio = as.numeric(final_dry_g.x) / final_dry_g.y)
ang4 <- merge(ang.smith, ang.zostera, by = c("blade_sample_id", "year","sample_time", "site", "distance_m"), all = TRUE)
ang5 <- ang4[,c("site", "group.y", "sample_time", "blade_sample_id", "distance_m", "macrophyte.x","final_dry_g.x", "macrophyte.y", "final_dry_g.y")]
ang5 <- ang4 %>%
select(c(site, group.y, sample_time, blade_sample_id, distance_m, macrophyte.x,final_dry_g.x, macrophyte.y, final_dry_g.y)) %>%
filter(macrophyte.y == "zostera") %>%
replace_na(list(macrophyte.x = "smithora", final_dry_g.x = "0")) %>%
mutate(ratio = as.numeric(final_dry_g.x) / final_dry_g.y)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(reshape2)
library(plyr)
library(stringr)
#library(nlme)
library(MuMIn)
library(knitr)
library(captioner)
knitr::opts_chunk$set(echo = FALSE)
ang5 <- ang4[,c("site", "group.y", "sample_time", "blade_sample_id", "distance_m", "macrophyte.x","final_dry_g.x", "macrophyte.y", "final_dry_g.y")]
ang5 <- ang4 %>%
select(c(site, group.y, sample_time, blade_sample_id, distance_m, macrophyte.x,final_dry_g.x, macrophyte.y, final_dry_g.y)) %>%
filter(macrophyte.y == "zostera") %>%
replace_na(list(macrophyte.x = "smithora", final_dry_g.x = "0")) %>%
mutate(ratio = as.numeric(final_dry_g.x) / final_dry_g.y)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(reshape2)
library(plyr)
library(stringr)
#library(nlme)
library(MuMIn)
library(knitr)
library(captioner)
knitr::opts_chunk$set(echo = FALSE)
## load data
smith.bio <- read.csv("./data/Smith.csv")
compare <- read.csv("./data/choked_seagrass_smithora.csv")
ang <- read.csv("./data/macrophyte_biomass_zeros_20170709.csv") # , stringsAsFactors=F
sites <- read.csv("./data/choked_sites.csv")
smith.expt <- read.csv("./data/Transplant_raw_smithora_wt.csv")
grazertraits <- read.csv("./data/grazertraitsmaster.csv")
grazers <- read.csv("./data/Grazers_EdgeVSInterior_V1_Aug09_2017.csv")
### compare
## from meadow surveys, identify edge and inner samples
edge <- filter(compare, site == "choked_edge_wolf")
inner <- filter(compare, site == "choked_inner_wolf")
compare_edge <- bind_rows(inner,edge)
###Making data nicer for plotting
head(compare)
#View(compare)
compare_edge2 <- compare_edge
compare_edge2$site <- as.character(compare_edge2$site)
compare_edge2$site[compare_edge$site == "choked_edge_wolf"] <- "Edge"
compare_edge2$site <- as.character(compare_edge2$site)
compare_edge2$site[compare_edge$site == "choked_inner_wolf"] <- "Interior"
## function to estimate sds for boxplots
min.mean.sd.max <- function(x) {
r <- c(min(x), mean(x) - sd(x), mean(x), mean(x) + sd(x), max(x))
names(r) <- c("ymin", "lower", "middle", "upper", "ymax")
r
}
ang2 <- merge(ang, sites, by.x = "site", by.y = "name2")
## this next bit selects the sites we want, and removes a couple of rows that appeared to be duplicates, zeros, or unclearly assigned to a shoot.
ang <- ang2 %>%
filter(group != "kelp") %>%
select(-c(notes, oven_date, QAQC_date,QAQC_Initials, Lat, Long, foil_wgt_g, wet_wgt_g, dry_wgt_g)) %>%
mutate(uniqueID = paste(date, site, blade_sample_id, sep = ".")) %>%
filter(final_dry_g != "0") %>%
filter(final_dry_g > "0") %>%
filter(uniqueID != "29-May.inner sandspit.75") %>%
mutate(uniqueID2 = paste(uniqueID, final_dry_g, sep = ".")) %>%
filter(uniqueID2 != "29-May.alcove.38.0.1") %>%
select(-uniqueID2)
install.packages(c("classInt", "cowplot", "e1071", "RgoogleMaps", "sf", "units"))
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib = "/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(c("boot", "callr", "clipr", "cluster", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "foreign", "fs", "ggplot2", "haven", "hms", "httr", "knitr", "markdown", "mime", "modelr", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "Rcpp", "reprex", "rlang", "rmarkdown", "rvest", "sys", "tibble", "tinytex", "whisker", "xfun", "xml2", "zoo"), lib="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(tidyverse)
library(ggplot2)
library(dplyr)
library(reshape2)
library(plyr)
library(stringr)
#library(nlme)
library(MuMIn)
library(knitr)
library(captioner)
knitr::opts_chunk$set(echo = FALSE)
table_nums <- captioner::captioner(prefix = "Table. ") #sets prefix for all tables
table_nums(name = "Table_2", caption = "Model selection results: Survey.", display = FALSE)
fig_nums <- captioner::captioner(prefix = "Figure.")
fig_nums(name = "Fig_1C", caption = "Smithora load at Eight sites in Choked Pass", display = FALSE)
## load data
smith.bio <- read.csv("./data/Smith.csv")
compare <- read.csv("./data/choked_seagrass_smithora.csv")
ang <- read.csv("./data/macrophyte_biomass_zeros_20170709.csv") # , stringsAsFactors=F
sites <- read.csv("./data/choked_sites.csv")
smith.expt <- read.csv("./data/Transplant_raw_smithora_wt.csv")
grazertraits <- read.csv("./data/grazertraitsmaster.csv")
grazers <- read.csv("./data/Grazers_EdgeVSInterior_V1_Aug09_2017.csv")
### compare
## from meadow surveys, identify edge and inner samples
edge <- filter(compare, site == "choked_edge_wolf")
inner <- filter(compare, site == "choked_inner_wolf")
compare_edge <- bind_rows(inner,edge)
###Making data nicer for plotting
head(compare)
#View(compare)
compare_edge2 <- compare_edge
compare_edge2$site <- as.character(compare_edge2$site)
compare_edge2$site[compare_edge$site == "choked_edge_wolf"] <- "Edge"
compare_edge2$site <- as.character(compare_edge2$site)
compare_edge2$site[compare_edge$site == "choked_inner_wolf"] <- "Interior"
## function to estimate sds for boxplots
min.mean.sd.max <- function(x) {
r <- c(min(x), mean(x) - sd(x), mean(x), mean(x) + sd(x), max(x))
names(r) <- c("ymin", "lower", "middle", "upper", "ymax")
r
}
ang2 <- merge(ang, sites, by.x = "site", by.y = "name2")
## this next bit selects the sites we want, and removes a couple of rows that appeared to be duplicates, zeros, or unclearly assigned to a shoot.
ang <- ang2 %>%
filter(group != "kelp") %>%
select(-c(notes, oven_date, QAQC_date,QAQC_Initials, Lat, Long, foil_wgt_g, wet_wgt_g, dry_wgt_g)) %>%
mutate(uniqueID = paste(date, site, blade_sample_id, sep = ".")) %>%
filter(final_dry_g != "0") %>%
filter(final_dry_g > "0") %>%
filter(uniqueID != "29-May.inner sandspit.75") %>%
mutate(uniqueID2 = paste(uniqueID, final_dry_g, sep = ".")) %>%
filter(uniqueID2 != "29-May.alcove.38.0.1") %>%
select(-uniqueID2)
ang.smith <- subset(ang, ang$macrophyte %in% "smithora")
ang.zostera<- subset(ang, ang$macrophyte %in% "zostera")
ang4 <- merge(ang.smith, ang.zostera, by = c("blade_sample_id", "year","sample_time", "site", "distance_m"), all = TRUE)
ang5 <- ang4[,c("site", "group.y", "sample_time", "blade_sample_id", "distance_m", "macrophyte.x","final_dry_g.x", "macrophyte.y", "final_dry_g.y")]
ang5 <- ang4 %>%
select(c(site, group.y, sample_time, blade_sample_id, distance_m, macrophyte.x,final_dry_g.x, macrophyte.y, final_dry_g.y)) %>%
filter(macrophyte.y == "zostera") %>%
replace_na(list(macrophyte.x = "smithora", final_dry_g.x = "0")) %>%
mutate(ratio = as.numeric(final_dry_g.x) / final_dry_g.y)
ang5$ratio <- as.numeric(ang5$final_dry_g.x) / as.numeric(ang5$final_dry_g.y)
#ang5$date <- as.Date(ang5$date, format="%d-%b")
ang5$logratio <- log(ang5$ratio + 0.1)
ang5$non_zero <- ifelse(ang5$raio > 0, 1, 0)
ang5$non_zero <- ifelse(ang5$ratio > 0, 1, 0)
ang5$group.y <- revalue(ang5$group.y, c(edge = "Edge Sites", inner ="Interior Sites"))
ang5$site <- revalue(ang5$site, c("inner sandspit" = "IS", "outer sandspit" = "OS","inner tristan" = "IT", "inner ang" = "IA", "wolf" = "WF", "inner derek" = "ID", "alcove" = "AL", "inner carolyn" = "IC"))
summary<-ddply(ang5, .(site, sample_time, group.y), summarise, min(logratio))
site.summary<-ddply(ang5, .(site, sample_time, group.y), summarise, length(distance_m))
m1 <- glm(non_zero ~ 1, data = ang5, family = binomial(link = logit))
m2 <- glm(ratio ~ 1, data = subset(ang5, non_zero = 1), family =Gamma(link = log))
View(ang5)
m2 <- glm(ratio ~ 1, data = subset(ang5, non_zero == 1), family =Gamma(link = log))
(bin_coef <- plogis(coef(m1)[[1]]))
(gamma_coef <- exp(coef(m2)[[1]]))
(plogis(confint(m1)))
(exp(confint(m2)))
m1 <- glm(non_zero ~ group.y, data = ang5, family = binomial(link = logit))
(bin_coef <- plogis(coef(m1)[[1]]))
summary(m1)
coef(m1)
m1 <- glm(non_zero ~ group.y*sample_time, data = ang5, family = binomial(link = logit))
m2 <- glm(ratio ~ group.y*sample_time, data = subset(ang5, non_zero == 1), family =Gamma(link = log))
summary(m1)
(bin_coef <- plogis(coef(m1)[[2]]))
(bin_coef <- plogis(coef(m1)[[1]]))
(gamma_coef <- exp(coef(m2)[[1]]))
(gamma_coef <- exp(coef(m2)[[2]]))
# this works too:
m1a <- glmer(non_zero ~ group.y*sample_time + (1|site), family = gamma, REML = FALSE, verbose = 1, data = ang5)
# this works too:
library(lme4)
m1a <- glmer(non_zero ~ group.y*sample_time + (1|site), family = gamma, REML = FALSE, verbose = 1, data = ang5)
m1a <- glmer(non_zero ~ group.y*sample_time + (1|site), family = Gamma(link = log), REML = FALSE, verbose = 1, data = ang5)
m1a <- glmer(I(non_zero + 1) ~ group.y*sample_time + (1|site), family = Gamma(link = log), REML = FALSE, verbose = 1, data = ang5)
coef(m1a)
m1a <- glmer(I(non_zero + 1) ~ group.y*sample_time + (1|site), family = binomial(link = logit), verbose = 1, data = ang5)
m1a <- glmer(non_zero ~ group.y*sample_time + (1|site), family = binomial(link = logit), verbose = 1, data = ang5)
bin_coef <- plogis(coef(m1))
bin_coef
coef(m1)
coef(m1a)
bin_coef <- plogis(coef(m1a))
bin_coef <- plogis(coef(m1a)[1])
coef(m1a)[1]
coef(m1a)[1]$site
coef(m1a)$site
(bin_coef <- plogis(coef(m1a)$site)
)
(bin_coef <- plogis(coef(m1a)$site)))
plogis(coef(m1a)$site)
(bin_coef <- plogis(as.data.frame(coef(m1a)$site)))
m2 <- glmer(ratio ~ group.y*sample_time+ (1|site), data = subset(ang5, non_zero == 1), family =Gamma(link = log))
m2a <- glmer(ratio ~ group.y*sample_time+ (1|site), data = subset(ang5, non_zero == 1), family =Gamma(link = log))
(gamma_coef <- exp(coef(m2a)[[1]]))
coef(m2a)
exp(coef(m2a))
coef(m2a)$site
coef(m2a)$site[1:4, 1:8]
coef(m2a)$site[1:8, 1:4]
(gamma_coef <- exp(coef(m2a)$site[1:8, 1:4]))
gamma_coef
(bin_coef <- plogis(coef(m1a)$site[1:8, 1:4])) #make these values numeric
coef(m1a)$site[1:8, 1:4]
coef(m2a)$site[1:8, 1:4]
coef(m1a)$site[1:8, 1:4]
plogis(coef(m1a)$site[1:8, 1:4])
(bin_coef <- plogis(as.numeric(coef(m1a)$site[1:8, 1:4]))) #make these values numeric
as.data.frame(coef(m1a)$site[1:8, 1:4])
coef1a <- as.data.frame(coef(m1a)$site[1:8, 1:4])
coef1a
(bin_coef <- plogis(coef1a)) #make these values numeric
class(coef1a)
class(coef1a[,1])
class(coef1a[,2])
class(coef1a[,3])
class(coef1a[,4])
plogis(coef1a)
plogis(coef1a[,1])
plogis(coef1a[,2])
plogis(coef1a[,3])
plogis(coef1a[,4])
summary(m1a)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(reshape2)
library(plyr)
library(stringr)
#library(nlme)
library(MuMIn)
library(knitr)
library(captioner)
knitr::opts_chunk$set(echo = FALSE)
data <- read.csv("./data/Smithora_2015_month_summary.csv") # from experiment
data <- read.csv("../data/Smithora_2015_month_summary.csv") # from experiment
data <- read.csv("../data/Smithora_2015_month_year_summary.csv") # from experiment
data <- read.csv("./data/Smithora_2015_month_year_summary.csv") # from experiment
View(data)
levels(data$site_name)
data.expt <- data %>%
filter(., site_name == "Choked_Wolf" | site_name == "Wolf_Beach" | site_name == "Choked_Inner")
View(data.expt)
data.meadow <- data %>%
filter(., site_name != "Wolf_Beach")
View(data.meadow)
install.packages("EcoVirtual")
knitr::opts_chunk$set(echo = TRUE)
popLog(N0=10, r=0.05, K=20, tmax=100, ext=TRUE)
install.packages(EcoVirtual)
library(EcoVirtual)
popLog(N0=10, r=0.05, K=20, tmax=100, ext=TRUE)
popLog(N0=10, r=0.15, K=20, tmax=100, ext=TRUE)
popLog(N0=10, r=2.15, K=20, tmax=100, ext=TRUE)
popLog(N0=10, r=2.00, K=20, tmax=100, ext=TRUE)
popLog(N0=10, r=2.01, K=20, tmax=100, ext=TRUE)
popLog(N0=10, r=2.05, K=20, tmax=100, ext=TRUE)
popLog(N0=10, r=2.05, K=20, tmax=40, ext=TRUE)
popLog(N0=10, r=2.05, K=20, tmax=400, ext=TRUE)
popLog(N0=10, r=2.05, K=20, tmax=40, ext=TRUE)
popLog(N0=10, r=2.05, K=20, tmin = 20, tmax=40, ext=TRUE)
popLog(N0=10, r=2.05, K=20, tmax=40, ext=TRUE)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(reshape2)
library(plyr)
library(stringr)
#library(nlme)
library(MuMIn)
library(knitr)
library(captioner)
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(reshape2)
library(plyr)
library(stringr)
#library(nlme)
library(MuMIn)
library(knitr)
library(captioner)
knitr::opts_chunk$set(echo = FALSE)
data <- read.csv("./data/Smithora_2015_month_year_summary2.csv") # from experiment
setwd("~/Documents/GitHub/Griffiths-et-al")
data <- read.csv("./data/Smithora_2015_month_year_summary2.csv") # from experiment
data <- read.csv("/data/Smithora_2015_month_year_summary2.csv") # from experiment
data <- read.csv("./data/Smithora_2015_month_year_summary2.csv") # from experiment
smith.bio <- read.csv("./data/Smith.csv") # from experiment
setwd("~/Documents/GitHub/Griffiths-et-al")
smith.bio <- read.csv("./data/Smith.csv") # from experiment
smith.bio <- read.csv("../data/Smith.csv") # from experiment
compare <- read.csv("./data/choked_seagrass_smithora.csv")
data <- read.csv("../data/Smithora_2015_month_year_summary2.csv") # from experiment
View(data)
# Choked_Sandspit is near OS/IS
# Choked_Inner is closer to IA than Wolf, but still a bit more towards the center of the bed
# I included some of the beach seining YSI measurements for wolf, so you have both CTD (Choked_Wolf) and seining YSI (Wolf_Beach) , and then Choked_Lower is really on the southwest edge of the bed near the lower islands
# identify data as edge or interior
data$zone <- as.character(data$site_name)
data$zone[data$zone == "Wolf_Beach"] <- "Edge"
data$zone[data$zone == "Choked_Wolf"] <- "Edge"
data$zone[data$zone == "Choked_Inner"] <- "Interior"
data$zone[data$zone == "Choked_Lower"] <- "Edge"
data$zone[data$zone == "Choked_Sandspit"] <- "Edge"
# at Wolf_Beach vs Choked_Inner on same day:
data.expt <- data %>%
filter(., site_name == "Choked_Wolf" | site_name == "Wolf_Beach" | site_name == "Choked_Inner")
data.meadow <- data %>%
filter(., site_name != "Wolf_Beach")
means <- data.expt %>%
data$zone <- as.character(data$site_name)
data$zone[data$zone == "Wolf_Beach"] <- "Edge"
data$zone[data$zone == "Choked_Wolf"] <- "Edge"
data$zone[data$zone == "Choked_Inner"] <- "Interior"
data$zone[data$zone == "Choked_Lower"] <- "Edge"
data$zone[data$zone == "Choked_Sandspit"] <- "Edge"
# at Wolf_Beach vs Choked_Inner on same day:
data.expt <- data %>%
filter(., site_name == "Choked_Wolf" | site_name == "Wolf_Beach" | site_name == "Choked_Inner")
data.meadow <- data %>%
filter(., site_name != "Wolf_Beach")
data.meadow <- data %>%
filter(., site_name != "Wolf_Beach" | site_name == "Choked_Wolf" )
data.meadow <- data %>%
filter(., site_name != "Wolf_Beach" | site_name != "Choked_Wolf" )
data.meadow <- data %>%
filter(., site_name != "Wolf_Beach" | site_name != "Choked_Wolf" )
data.meadow <- data %>%
filter(., -(site_name == "Wolf_Beach" | site_name == "Choked_Wolf" ))
data.meadow <- data %>%
filter(., site_name != "Wolf_Beach" ) %>%
filter(., site_name != "Choked_Wolf" )
data %>%
filter(., line_out_depth == 0 | line_out_depth == 5 | line_out_depth == 10)
data.expt <- data %>%
filter(., site_name == "Choked_Wolf" | site_name == "Wolf_Beach" | site_name == "Choked_Inner")
data.meadow <- data %>%
filter(., site_name != "Wolf_Beach" ) %>%
filter(., site_name != "Choked_Wolf" )
data <- data %>%
filter(., line_out_depth == 0 | line_out_depth == 5 | line_out_depth == 10)
data.expt <- data %>%
filter(., site_name == "Choked_Wolf" | site_name == "Wolf_Beach" | site_name == "Choked_Inner")
data.meadow <- data %>%
filter(., site_name != "Wolf_Beach" ) %>%
filter(., site_name != "Choked_Wolf" )
means <- ddply(data.expt, c(month, site_name), salinity_ysi_mean, mean)
means <- ddply(data.expt, c(Month, site_name), salinity_ysi_mean, mean)
means <- ddply(data.expt, c("Month", "site_name"), salinity_ysi_mean, mean)
means <- ddply(data.expt, c("Month", "site_name"), salinity_ysi_mean, average)
means <- ddply(data.expt, c("Month", "site_name"), summarize, mean(salinity_ysi_mean))
means
means <- ddply(data.expt, c("Month", "site_name", "line_out_depth"), summarize, mean(salinity_ysi_mean))
means
temps <- ddply(data, c("Month", "site_name", "line_out_depth"), summarize, mean(temp_ysi_mean))
temps
View(temps)
temps <- ddply(data, c("Month", "site_name", "line_out_depth"), summarize, c(mean(temp_ysi_mean), mean(temp_C_ctd_mean))
View(temps)
temps <- ddply(data, c("Month", "site_name", "line_out_depth"), summarize, c(mean(temp_ysi_mean), mean(temp_C_ctd_mean)))
View(temps)
temps <- ddply(data, c("Month", "site_name", "line_out_depth"), summarize, mean(temp_ysi_mean))
temps_ctd <- ddply(data, c("Month", "site_name", "line_out_depth"), summarize, mean(temp_C_ctd_mean))
View(temps_ctd)
